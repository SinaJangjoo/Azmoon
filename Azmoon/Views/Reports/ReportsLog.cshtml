@using Azmoon.ViewModels
@model ReportsViewModel
@{
	var selected = Model.combinedList;
}
@* @{
    var title = TempData["Title"] as string;

    var intId = ViewBag.tempdataId as List<int>;
    var stringFirstName = ViewBag.tempdataFName as List<string>;
    var stringLastName = ViewBag.tempdataLName as List<string>;
    var stringPostalCode = ViewBag.tempdataPostalCode as List<string>;
    var stringTel = ViewBag.tempdataTel as List<string>;
    var stringEmail = ViewBag.tempdataEmail as List<string>;

    var combinedList = new List<object>();

    if (intId != null)
    {
        combinedList.AddRange(intId.Select(i => i.ToString()));
    }
    if (stringFirstName != null)
    {
        combinedList.AddRange(stringFirstName.Select(i => i.ToString()));
    }
    if (stringLastName != null)
    {
        combinedList.AddRange(stringLastName.Select(i => i.ToString()));
    }
    if (stringPostalCode != null)
    {
        combinedList.AddRange(stringPostalCode.Select(i => i.ToString()));
    }
    if (stringTel != null)
    {
        combinedList.AddRange(stringTel.Select(i => i.ToString()));
    }
    if (stringEmail != null)
    {
        combinedList.AddRange(stringEmail.Select(i => i.ToString()));
    }
} *@

<body>

	<div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
		<div class="row">
			<h1 class="text-white">Reports</h1>
		</div>
	</div>
	<form asp-action="PrintPdf" asp-controller="Reports" method="post">
		<div class="container row mt-4 mb-4">
			@if (Model.Id != null && Model.Id.Count > 0)
			{
				@for (int i = 0; i < Model.Id.Count; i++)
				{
					<input type="hidden" name="Id[@i]" value="@Model.Id[i]" />
				}
			}
			@if (Model.FirstName != null && Model.FirstName.Count > 0)
			{
				@for (int i = 0; i < Model.FirstName.Count; i++)
				{
					<input type="hidden" name="FirstName[@i]" value="@Model.FirstName[i]" />
				}
			}
			@if (Model.LastName != null && Model.LastName.Count > 0)
			{
				@for (int i = 0; i < Model.LastName.Count; i++)
				{
					<input type="hidden" name="LastName[@i]" value="@Model.LastName[i]" />
				}
			}
			@if (Model.PostalCode != null && Model.PostalCode.Count > 0)
			{
				@for (int i = 0; i < Model.PostalCode.Count; i++)
				{
					<input type="hidden" name="PostalCode[@i]" value="@Model.PostalCode[i]" />
				}
			}
			@if (Model.Tel != null && Model.Tel.Count > 0)
			{
				@for (int i = 0; i < Model.Tel.Count; i++)
				{
					<input type="hidden" name="Tel[@i]" value="@Model.Tel[i]" />
				}
			}
			@if (Model.Email != null && Model.Email.Count > 0)
			{
				@for (int i = 0; i < Model.Email.Count; i++)
				{
					<input type="hidden" name="Email[@i]" value="@Model.Email[i]" />
				}
			}
			<div class="col-6">
				<span>Title:</span>
				<input class="border" name="Title" value="@Model.Title" readonly />
			</div>
			<div class="col-6">
				@if (Model.combinedList != null)
				{
					@for (int i = 0; i < Model.combinedList.Count; i++)
					{
						<input type="hidden" name="combinedList[@i]" value="@Model.combinedList[i]" />
					}
					<select class="container">

						@foreach (var item in Model.combinedList)
						{
							<option hidden>Reports is here</option>
							<option>@item</option>

						}

					</select>
				}
			</div>
		</div>
		<div class="row justify-content-center">
			<div class=" col-2 ">
				<a asp-action="GetAllDatas" asp-controller="AzmoonTest" class="btn btn-danger mt-3">Back</a>
			</div>
			<div class="col-2 ">
				<button type="submit" class="btn btn-warning mt-3">Report</button>
			</div>
	</form>
	<div class="col-2 ">
		<a id="exportButton" class="btn btn-warning mt-3">Aspose Report</a>
	</div>
	</div>
</body>

@section Scripts {
	<script>


		document.getElementById('exportButton').addEventListener('click', function () {

			const selectedArray = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(selected));

			fetch('/api/Aspose/export', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(selectedArray)
			})
				.then(response => {
					if (!response.ok) {
						throw new Error('Network response was not ok');
					}
					return response.blob();
				})
				.then(blob => {
					const url = window.URL.createObjectURL(blob);
					const a = document.createElement('a');
					a.style.display = 'none';
					a.href = url;
					a.download = 'Export.xlsx';
					document.body.appendChild(a);
					a.click();
					window.URL.revokeObjectURL(url);
				})
				.catch(error => console.error('There was a problem with the fetch operation:', error));
		});

	</script>
}
